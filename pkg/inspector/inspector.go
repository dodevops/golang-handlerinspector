// Package inspector includes an inspector that analyzes the requests to the http.Handler values generated by
// HandlerBuilder
package inspector

import "handlerinspector/pkg/builder"

// The Inspector inspects the given HandlerBuilder instance and answers questions about its usage
type Inspector struct {
	hb *builder.HandlerBuilder
}

// NewInspector creates a new Inspector
func NewInspector(hb *builder.HandlerBuilder) *Inspector {
	return &Inspector{hb: hb}
}

// Called returns how often rule ruleName was called
func (i *Inspector) Called(ruleName string) int {
	if v, ok := i.hb.Called[ruleName]; ok {
		return v
	} else {
		return 0
	}
}

// Failed returns if the handler fails at least once
func (i *Inspector) Failed() bool {
	return i.hb.Failed
}

// AllWereCalled returns whether all rules were called at least once
func (i *Inspector) AllWereCalled() bool {
	allWereCalled := true
	for _, rule := range i.hb.Rules {
		if i.Called(rule.Name) == 0 {
			allWereCalled = false
		}
	}
	return allWereCalled
}
